@page "/success"
@using VibeQuestApp.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject UserManager<User> UserManager
@inject AuthenticationStateProvider AuthProvider
@inject AppDbContext Db


<h3>🎉 Account Created Successfully!</h3>

<div class="card p-3">
    @if (!string.IsNullOrEmpty(user?.AvatarUrl))
    {
        <img class="img-thumbnail mb-3"
             style="max-width: 300px; max-height: 300px; width: auto; height: auto; display: block; margin: 0 auto;"
             src="@user.AvatarUrl" alt="Avatar" />
    }

    <h4>Email: @user?.Email</h4>
    <p>
        Welcome to VibeQuest
        <strong>
            @GetHeroName()
        </strong>!
    </p>

    <button class="btn btn-primary mt-3" @onclick="GoToProfile">View Your Profile</button>
</div>

@code {
    private string? HeroName;
    private User? user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        user = await UserManager.GetUserAsync(authState.User);
        if (user is not null)
        {
            var profile = await Db.HeroProfiles.FirstOrDefaultAsync(p => p.UserId == user.Id);
            HeroName = profile?.HeroName;
        }
    }

    private string GetHeroName() => string.IsNullOrEmpty(HeroName) ? "" : $" {HeroName}";

    private void GoToProfile()
    {
        NavigationManager.NavigateTo("/profile");
    }
}
