@page "/"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthProvider
@inject UserManager<User> UserManager


@implements IDisposable

<PageTitle>Begin Your Adventure</PageTitle>

<div style="text-align: center; margin-top: 100px;">
    <h1>Embark on your Quest with VibeQuest</h1>
    <p>Gamify your personal development journey.</p>

    <div style="margin-top: 30px;">
        @if (isLoggedIn)
        {
            <button class="btn btn-info" @onclick="@(() => NavigationManager.NavigateTo("/profile"))">
                View Profile
            </button>
        }
        else
        {
            <button class="btn btn-success btn-lg" @onclick="@(() => NavigationManager.NavigateTo("/Onboarding"))">
                Start Your Quest!
            </button>

            <br /><br />

            <button class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo("/login"))">
                Log In
            </button>
        }
    </div>
</div>

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity?.IsAuthenticated == true;
    }

    public void Dispose()
    {
    }
}
