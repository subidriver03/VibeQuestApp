@page "/profile"
@using VibeQuestApp.Data
@using VibeQuestApp.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Db
@inject UserSessionService Session
@inject NavigationManager NavigationManager

<h3>Hero Profile</h3>

@if (Session.CurrentUser is null)
{
    <p class="text-danger">No user session found. Please <a href="/login">log in</a>.</p>
}
else if (heroProfile == null)
{
    <p>Loading profile...</p>
}
else
{
    <div class="card p-3">
        @if (!string.IsNullOrWhiteSpace(heroProfile.AvatarUrl))
        {
            <img src="@heroProfile.AvatarUrl"
                 alt="Hero Avatar"
                 class="img-thumbnail mb-3"
                 style="max-width: 300px; height: auto; object-fit: cover;"
                 onerror="this.src='/images/default-avatar.png'" />
        }

        <h4>@heroProfile.HeroName</h4>
        <p><strong>Level:</strong> @heroProfile.Level</p>
        <p><strong>Total XP:</strong> @heroProfile.TotalXP</p>
        <p><strong>XP to Next Level:</strong> @heroProfile.XPRequiredForNextLevel</p>

        <div class="mb-3">
            <label><strong>XP Progress:</strong></label>
            <div class="progress">
                <div class="progress-bar bg-info" role="progressbar"
                     style="width:@($"{heroProfile.XPProgressPercentage:F0}%")"
                     aria-valuenow="@heroProfile.XPIntoCurrentLevel"
                     aria-valuemin="0"
                     aria-valuemax="@heroProfile.XPRequiredForNextLevel">
                    @heroProfile.XPIntoCurrentLevel / @heroProfile.XPRequiredForNextLevel XP
                </div>
            </div>
        </div>

        <p><strong>Focus Areas:</strong> @heroProfile.LifeFocusAreas</p>
        <p><strong>Primary Goals:</strong> @heroProfile.PrimaryGoals</p>
        <p><strong>Long-Term Vision:</strong> @heroProfile.LongTermVision</p>
        <p><strong>Motivation Style:</strong> @heroProfile.MotivationStyle</p>
        <p><strong>Commitment Level:</strong> @heroProfile.CommitmentLevel</p>
        <p><strong>Daily Reset Time:</strong> @heroProfile.DailyResetTime.ToString(@"hh\:mm")</p>
    </div>
}

@code {
    private HeroProfile? heroProfile;

    protected override async Task OnInitializedAsync()
    {
        var userId = Session.CurrentUser?.Id;
        if (string.IsNullOrEmpty(userId))
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        heroProfile = await Db.HeroProfiles.FirstOrDefaultAsync(p => p.UserId == userId);
    }
}
