@page "/profile"
@using VibeQuestApp.Data
@using VibeQuestApp.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Db

<h3>Hero Profile</h3>

@if (heroProfile == null)
{
    <p>Loading profile...</p>
}
else
{
    <div class="card p-3">
        @if (!string.IsNullOrWhiteSpace(heroProfile.AvatarUrl))
        {
            <img src="@heroProfile.AvatarUrl"
                 alt="Hero Avatar"
                 class="img-thumbnail mb-3"
                 style="max-height: 150px;"
                 onerror="this.src='/images/default-avatar.png'" />
        }

        <h4>@heroProfile.HeroName</h4>
        <p><strong>Level:</strong> @heroProfile.Level</p>
        <p><strong>Total XP:</strong> @heroProfile.TotalXP</p>
        <p><strong>Focus Areas:</strong> @heroProfile.LifeFocusAreas</p>
        <p><strong>Primary Goals:</strong> @heroProfile.PrimaryGoals</p>
        <p><strong>Long-Term Vision:</strong> @heroProfile.LongTermVision</p>
        <p><strong>Motivation Style:</strong> @heroProfile.MotivationStyle</p>
        <p><strong>Commitment Level:</strong> @heroProfile.CommitmentLevel</p>
        <p><strong>Daily Reset Time:</strong> @heroProfile.DailyResetTime.ToString(@"hh\:mm")</p>
    </div>
}

@code {
    private HeroProfile? heroProfile;
    private string currentUserId = "1"; // TEMP for testing until real authentication

    protected override async Task OnInitializedAsync()
    {
        heroProfile = await Db.HeroProfiles
            .FirstOrDefaultAsync(p => p.UserId == currentUserId);
    }
}
