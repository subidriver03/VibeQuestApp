@page "/login"
@using System.ComponentModel.DataAnnotations
@using VibeQuestApp.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject NavigationManager NavigationManager
@inject ILogger<Login> Logger

<h3>Login</h3>

@if (loginFailed)
{
    <div class="alert alert-danger">Invalid email or password. Please try again.</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

@code {
    private VibeQuestApp.Models.LoginModel loginModel = new();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        Logger.LogDebug("Attempting login for email: {Email}", loginModel.Email);

        var result = await SignInManager.PasswordSignInAsync(loginModel.Email!, loginModel.Password!, false, false);

        if (result.Succeeded)
        {
            var user = await UserManager.FindByEmailAsync(loginModel.Email!);
            if (user != null && user.IsDeveloper)
            {
                NavigationManager.NavigateTo("/developer/dashboard");
            }
            else
            {
                NavigationManager.NavigateTo("/profile");
            }
            return;
        }

        Logger.LogWarning("Login failed for email: {Email}", loginModel.Email);
        loginFailed = true;
    }

}
