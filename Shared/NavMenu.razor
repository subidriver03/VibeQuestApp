@inject UserSessionService Session
@inject NavigationManager NavigationManager

@implements IDisposable

<div class="sidebar">
    <nav class="nav flex-column">
        @if (Session.CurrentUser is null)
        {
            <!-- Guest Menu -->
            <a class="nav-link" href="/">Get Started</a>
            <a class="nav-link" href="/login">Log In</a>
        }
        else if (Session.CurrentUser.IsDeveloper)
        {
            <!-- Developer Menu -->
            <a class="nav-link" href="/developer/dashboard">Dev Dashboard</a>
            <a class="nav-link text-danger" href="#" @onclick="Logout">Logout</a>
        }
        else
        {
            <!-- Authenticated User Menu -->
            <a class="nav-link" href="/quests">Quests</a>
            <a class="nav-link" href="/journal">Journal</a>
            <a class="nav-link" href="/profile">Profile</a>
            <a class="nav-link" href="/rewards">Rewards</a>
            <a class="nav-link text-danger" href="#" @onclick="Logout">Logout</a>
        }
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        // Subscribe to session changes to refresh UI
        Session.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        // Prevent memory leaks by unsubscribing
        Session.OnChange -= StateHasChanged;
    }

    private void Logout()
    {
        Session.ClearUser(); // Calls your service to clear session
        NavigationManager.NavigateTo("/", true);
    }
}
